@require _globals

mat-form()
// @import url(https://fonts.googleapis.com/css?family=Roboto);
  body-bg = #f3f6ed //theme-form-back;


  // Shadows
  shadow-inset = inset 0 2px 2px 0 rgba(0,0,0,.14);
  shadow_0 = 0 0 1px rgba(0, 0, 0, 0);
  shadow_2 = 0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);
  shadow_3 = 0 3px 4px 0 rgba(0,0,0,.14),0 3px 3px -2px rgba(0,0,0,.2),0 1px 8px 0 rgba(0,0,0,.12);
  shadow_4 = 0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.2);
  shadow_6 = 0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12),0 3px 5px -1px rgba(0,0,0,.2);
  shadow_8 = 0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12),0 5px 5px -3px rgba(0,0,0,.2);

  // Font Sizes
  mf-font-size = 1rem;
  mf-active-font-size = mf-font-size * 0.8;
  mf-active-top = -(mf-font-size)

  // Margin & Paddings
  mf-gap = mf-font-size * 1.5;
  mf-spacer = mf-font-size / 8;
  mf-fieldset-margin = 0 0 mf-gap * 2;
  mf-checkbox-gap = mf-font-size * 2;
  mf-checkbox-top = 0;
  mf-radio-margin = mf-font-size / -4;

  // Colors
  mf-input-color = #333;
  mf-border-color = #999;
  mf-label-color = lighten(mf-border-color, 10%);
  mf-active-color = darken(mf-border-color, 10%);
  mf-focus-color = #337ab7;
  mf-error-color = #d9534f;

  // Animation
  mf-transition-speed = 0.28s;

    //(original code from: https://codepen.io/jonnitto/pen/OVmvPB)

  .wrapper-material-form
    position: relative;
    max-width: 84rem;
    margin: 0.1rem auto;
    background: body-bg;
    width: 100%;
    padding: 0.2rem 1% 0.8rem
    border-radius: 1px;
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      box-shadow: shadow_8;
      transform: scale(0.98);
      transition: transform mf-transition-speed ease-in-out;
      z-index: -1;
    }
    &:hover::before {
      transform: scale(1);
    }

    // App specific stuff
    .page-title
      text-align: center
      text-transform capitalize
    .form-inner
      .module
        margin-top: 0.5rem;
        margin-bottom: 1rem;
        padding 0.8rem
        border: 1px solid #C0C0C0;
        border-radius: 0.2rem;
      .form-group
        &__slug
          font-size: 0.9em
          color: #777
          padding-right: 0.3em
        &__label--disabled
          //font-size: 0.8rem;
          color: #8A8A8A;

    form.editable
      padding-left: 24px
    #content-editable1, #content-editable2
      min-height: 1.8em
      line-height 1.8
      cursor pointer
      &.cke_editable
        cursor text

    .button-container
      text-align: center;

    // The Styles for the form
    fieldset {
      margin: mf-fieldset-margin;
      padding: 0;
      border: none;
    }

    .form-radio,
    .form-group
      position: relative;
      margin-top: (mf-gap * 1.5);
      margin-bottom: (mf-gap * 1.5);
      //&.edit-wrapper
      //  clearfix()
      //  background-color: darken(body-bg, 3%)
      //  padding: 0rem 0.8rem 0.4rem

    .form-inline
      > .form-group,
      > .checkbox,
      > .btn
        display: inline-block;
        width: 48%
        margin-top: mf-gap * 1.2
        margin-bottom: 0
    .form-pack
      > .form-group,
      > .checkbox,
      > .btn,
      button
        display: inline-block;
        margin-top: mf-gap * 1.2
        margin-right: mf-spacer
        margin-bottom: 0
      .btn-group
        margin-left 2rem
        margin-right 1rem


.form-help {
      margin-top: mf-spacer;
      margin-left: mf-spacer;
      color: mf-label-color;
      font-size: mf-active-font-size;

      .checkbox &,
      .form-radio &,
      .form-group & {
        position: absolute;
        width: 100%;
      }

      .checkbox & {
        position: relative;
        margin-bottom: mf-font-size;
      }

      .form-radio & {
        padding-top: (mf-spacer * 2);
        margin-top: -(mf-font-size)
      }
    }

    .form-group {
      // scss-lint:disable QualifyingElement, NestingDepth
      input {
        height: (mf-font-size * 1.9);
      }

      textarea {
        resize: none;
      }

      select {
        width: 100%;
        font-size: mf-font-size;
        height: (mf-font-size * 1.6);
        padding: mf-spacer mf-spacer (mf-spacer / 2);
        background: none;
        border: none;
        line-height: 1.6;
        box-shadow: none;
      }

      .control-label {
        position: absolute;
        top: (mf-font-size / 4);
        pointer-events: none;
        padding-left: mf-spacer;
        z-index: 1;
        color: mf-label-color;
        font-size: mf-font-size;
        font-weight: normal;
        transition: all mf-transition-speed ease;
      }

      .bar {
        position: relative;
        border-bottom: (mf-font-size / 16) solid mf-border-color;
        display: block;

        &::before {
          content: '';
          height: (mf-font-size / 8);
          width: 0;
          left: 50%;
          bottom: (mf-font-size / -16);
          position: absolute;
          background: mf-focus-color;
          transition: left mf-transition-speed ease, width mf-transition-speed ease;
          z-index: 2;
        }
      }

      input,
      textarea {
        display: block;
        background: none;
        padding: mf-spacer mf-spacer (mf-spacer / 2);
        font-size: mf-font-size;
        border-width: 0;
        border-color: transparent;
        line-height: 1.9;
        width: 100%;
        color: #572a2a;
        transition: all mf-transition-speed ease;
        box-shadow: none;
      }

      input[type="file"], input[type="submit"] {
        line-height: 1;
        ~ .bar {
          display: none
        }
      }

      select,
      input:focus,
      input:valid,
      input.form-file,
      input.has-value,
      textarea:focus,
      textarea:valid,
      textarea.form-file,
      textarea.has-value {
        color: mf-input-color;

        ~ .control-label {
          font-size: mf-active-font-size;
          color: mf-active-color;
          top: mf-active-top;
          left: 0;
        }
      }

      select,
      input,
      textarea {
        &:focus {
          outline: none;

          ~ .control-label {
            color: mf-focus-color;
          }

          ~ .bar {
            &::before {
              width: 100%;
              left: 0;
            }
          }
        }
      }
    }

    // Radio & Checkbox
    .checkbox,
    .form-radio {
      label {
        position: relative;
        cursor: pointer;
        padding-left: mf-checkbox-gap;
        text-align: left;
        color: mf-input-color;
        display: block;
      }

      input {
        width: auto;
        opacity: 0.00000001;
        position: absolute;
        left: 0;
      }
    }

    .radio {
      margin-bottom: mf-font-size;

      .helper {
        position: absolute;
        top: mf-radio-margin;
        left: mf-radio-margin;
        cursor: pointer;
        display: block;
        font-size: mf-font-size;
        user-select: none;
        color: mf-border-color;

        &::before,
        &::after {
          content: '';
          position: absolute;
          left: 0;
          top: 0;
          margin: (mf-spacer * 2);
          width: mf-font-size;
          height: mf-font-size;
          transition: transform mf-transition-speed ease;
          border-radius: 50%;
          border: (mf-font-size / 8) solid currentColor;
        }

        &::after {
          transform: scale(0);
          background-color: mf-focus-color;
          border-color: mf-focus-color;
        }
      }

      label:hover .helper {
        color: mf-focus-color;
      }

      // scss-lint:disable QualifyingElement, NestingDepth
      input:checked {
        ~ .helper {
          &::after {
            transform: scale(0.5);
          }
          &::before {
            color: mf-focus-color;
          }
        }
      }
    }

    .checkbox {
      // scss-lint:disable QualifyingElement

      margin-top: (mf-gap * 2);
      margin-bottom: mf-font-size;

      .helper {
        color: mf-border-color;
        position: absolute;
        top: mf-checkbox-top;
        left: 0;
        width: mf-font-size;
        height: mf-font-size;
        z-index: 0;
        border: (mf-font-size / 8) solid currentColor;
        border-radius: (mf-font-size / 16);
        transition: border-color mf-transition-speed ease;

        &::before,
        &::after {
          position: absolute;
          height: 0;
          width: (mf-font-size * 0.2);
          background-color: mf-focus-color;
          display: block;
          transform-origin: left top;
          border-radius: (mf-font-size / 4);
          content: '';
          transition: opacity mf-transition-speed ease, height 0s linear mf-transition-speed;
          opacity: 0;
        }

        &::before {
          top: (mf-font-size * 0.65);
          left: (mf-font-size * 0.38);
          transform: rotate(-135deg);
          box-shadow: 0 0 0 (mf-font-size / 16) body-bg;
        }

        &::after {
          top: (mf-font-size * 0.3);
          left: 0;
          transform: rotate(-45deg);
        }
      }

      label:hover .helper {
        color: mf-focus-color;
      }

      input:checked {
        ~ .helper {
          color: mf-focus-color;

          &::after,
          &::before {
            opacity: 1;
            transition: height mf-transition-speed ease;
          }

          &::after {
            height: (mf-font-size / 2);
          }

          &::before {
            height: (mf-font-size * 1.2);
            transition-delay: mf-transition-speed;
          }
        }
      }
    }

    .radio + .radio,
    .checkbox + .checkbox {
      margin-top: mf-font-size;
    }

    .has-error {
      .legend.legend,
      &.form-group .control-label.control-label {
        // Prevent !importantRule
        color: mf-error-color;
      }

      &.form-group,
      &.checkbox,
      &.radio,
      &.form-radio {
        .form-help,
        .helper {
          color: mf-error-color;
        }
      }

      .bar {
        &::before {
          background: mf-error-color;
          left: 0;
          width: 100%;
        }
      }
    }

    .button, input[type="submit"].button {
      position: relative;
      max-width: 16em;
      background-color: theme-common-action-button-color
      border: 1px solid theme-common-action-button-color
      border-radius: 0.2rem
      font-size: (mf-font-size * 1.1);
      color: #eee //lighten(mf-focus-color, 10%);
      margin:( mf-gap * 2) auto;
      padding: 0.125rem 0.125rem 0.0625rem; //0rem 3rem //(mf-gap / 2) (mf-gap * 2);
      cursor: pointer;
      transition: background-color mf-transition-speed ease, color mf-transition-speed ease, box-shadow mf-transition-speed ease;
      overflow: hidden;
      box-shadow: shadow_2;

      span {
        color: #fff;
        position: relative;
        z-index: 1;
      }

      &::before {
        content: '';
        position: absolute;
        background: darken(mf-focus-color, 40%);
        border: 50vh solid darken(mf-focus-color, 20%);
        width: 30vh;
        height: 30vh;
        border-radius: 50%;
        display: block;
        top: 50%;
        left: 50%;
        z-index: 0;
        opacity: 1;
        transform: translate(-50%, -50%) scale(0);
      }

      &:hover {
        color: #fff  //mf-focus-color;
        box-shadow: shadow_6;
      }

      &:active,
      &:focus {
        &::before {
          transition: transform (mf-transition-speed * 4) ease, opacity mf-transition-speed ease (mf-transition-speed * 1.3);
          transform: translate(-50%, -50%) scale(1);
          opacity: 0;
        }
      }

      &:focus {
        outline: none;
      }
    }